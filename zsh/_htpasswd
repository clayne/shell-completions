#compdef htpasswd

# Generated with perl module App::Spec v0.013

_htpasswd() {
    local program=htpasswd
    typeset -A opt_args
    local curcontext="$curcontext" state line context


        # ---- Command: 
        _arguments -s  \
            '1: :->passwdfile' \
            '2: :->username' \
            '3: :->password' \
            '-b[Use batch mode]' \
            '-i[Read the password from stdin without verification]' \
            '-c[Create the passwdfile]' \
            '-n[Display the results on standard output]' \
            '-m[Use MD5 encryption for passwords]' \
            '-B[Use bcrypt encryption for passwords]' \
            '-C[sets the computing time used for the bcrypt algorithm]' \
            '-d[Use crypt() encryption for passwords]' \
            '-s[Use SHA encryption for passwords]' \
            '-p[Use plaintext passwords]' \
            '-D[Delete user]' \
            '-v[Verify password]' \
            '--help[Show command help]' \
            '-h[Show command help]' \
            && ret=0

        case $state in
        passwdfile)
_files
        ;;
        username)

        ;;
        password)

        ;;
        esac


}


__htpasswd_dynamic_comp() {
    local argname="$1"
    local arg="$2"
    local comp="arg:$argname:(("
    local line
    while read -r line; do
        local name="$line"
        local desc="$line"
        name="${name%$'\t'*}"
        desc="${desc/*$'\t'}"
        comp="$comp$name"
        if [[ -n "$desc" && "$name" != "$desc" ]]; then
            comp="$comp\\:"'"'"$desc"'"'
        fi
        comp="$comp "
    done <<< "$arg"

    comp="$comp))"
    _alternative "$comp"
}

