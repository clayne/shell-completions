#compdef json_xs

# Generated with perl module App::Spec v0.012

_json_xs() {
    local program=json_xs
    typeset -A opt_args
    local curcontext="$curcontext" state line context


        # ---- Command: 
        _arguments -s  \
            '1: :->file' \
            '-f[Read a file in the given format from STDIN]:f:("json" "cbor" "storable" "storable-file" "bencode" "clzf" "eval" "yaml" "string" "none")' \
            '-t[Write the file in the given format to STDOUT]:t:("json" "json-utf-8" "json-pretty" "json-utf-16le" "json-utf-16be" "json-utf-32le" "json-utf-32be" "cbor" "cbor-packed" "storable" "storable-file" "bencode" "clzf" "yaml" "dump" "dumper" "string" "none")' \
            '-e[Evaluate perl code after reading the data]:e' \
            '--help[Show command help]' \
            '-h[Show command help]' \
            && ret=0

        case $state in
        file)
_files
        ;;
        esac


}


__json_xs_dynamic_comp() {
    local argname="$1"
    local arg="$2"
    local comp="arg:$argname:(("
    local line
    while read -r line; do
        local name="$line"
        local desc="$line"
        name="${name%$'\t'*}"
        desc="${desc/*$'\t'}"
        comp="$comp$name"
        if [[ -n "$desc" && "$name" != "$desc" ]]; then
            comp="$comp\\:"'"'"$desc"'"'
        fi
        comp="$comp "
    done <<< "$arg"

    comp="$comp))"
    _alternative "$comp"
}

