#compdef yamllint

# Generated with perl module App::Spec v0.013

_yamllint() {
    local program=yamllint
    typeset -A opt_args
    local curcontext="$curcontext" state line context


        # ---- Command: 
        _arguments -s  \
            '*: :->file' \
            '--config-file[path to a custom configuration]:config-file:_files' \
            '-c[path to a custom configuration]:config-file:_files' \
            '--config-data[custom configuration as YAML source]:config-data' \
            '-d[custom configuration as YAML source]:config-data' \
            '--format[format for parsing output]:format:("parsable" "standard" "colored" "auto")' \
            '-f[format for parsing output]:format:("parsable" "standard" "colored" "auto")' \
            '--strict[return non-zero exit code on warnings as well as errors]' \
            '-s[return non-zero exit code on warnings as well as errors]' \
            '--version[show programs version number and exit]' \
            '-v[show programs version number and exit]' \
            '--help[Show command help]' \
            '-h[Show command help]' \
            && ret=0

        case $state in
        file)
_files
        ;;
        esac


}


__yamllint_dynamic_comp() {
    local argname="$1"
    local arg="$2"
    local comp="arg:$argname:(("
    local line
    while read -r line; do
        local name="$line"
        local desc="$line"
        name="${name%$'\t'*}"
        desc="${desc/*$'\t'}"
        comp="$comp$name"
        if [[ -n "$desc" && "$name" != "$desc" ]]; then
            comp="$comp\\:"'"'"$desc"'"'
        fi
        comp="$comp "
    done <<< "$arg"

    comp="$comp))"
    _alternative "$comp"
}

