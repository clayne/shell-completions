#compdef json_pp

# Generated with perl module App::Spec v0.010

_json_pp() {
    local program=json_pp
    typeset -A opt_args
    local curcontext="$curcontext" state line context


        # ---- Command: 
        _arguments -s  \
            '1: :->file' \
            '-f[Reads a data in the given format from STDIN]:f:("json" "eval")' \
            '-t[Writes a data in the given format to STDOUT]:t:("null" "json" "dumper")' \
            '--json_opt[options to JSON::PP]:json_opt:("ascii" "latin1" "utf8" "pretty" "indent" "space_before" "space_after" "relaxed" "canonical" "allow_nonref" "allow_singlequote" "allow_barekey" "allow_bignum" "loose" "escape_slash")' \
            '-v[Verbose option, but currently no action in fact]' \
            '-V[Prints version and exits]' \
            '--help[Show command help]' \
            '-h[Show command help]' \
            && ret=0

        case $state in
        file)
_files
        ;;
        esac


}


__json_pp_dynamic_comp() {
    local argname="$1"
    local arg="$2"
    local comp="arg:$argname:(("
    local line
    while read -r line; do
        local name="$line"
        local desc="$line"
        name="${name%$'\t'*}"
        desc="${desc/*$'\t'}"
        comp="$comp$name"
        if [[ -n "$desc" && "$name" != "$desc" ]]; then
            comp="$comp\\:"'"'"$desc"'"'
        fi
        comp="$comp "
    done <<< "$arg"

    comp="$comp))"
    _alternative "$comp"
}

